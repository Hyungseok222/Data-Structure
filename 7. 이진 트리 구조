/* 배열을 이용해 이진트리 구조 만들기 (cpp버전) */

#include <iostream>
#include <fstream>

using namespace std;

int PN[10];
int CL[10];
int CR[10];

void createTree();
void TR(int n, int* cnt);
void FND(int n);




int main() {
	createTree();

	int cnt = 0;
	cout << "# 노드 순회:" << endl;
	TR(1,&cnt);
	cout << "      노드의 수:" << cnt << endl; 
	cout << endl;


	int n;
	cout << "#조상 검사할 숫자:";
	cin >> n;
	FND(n);

	return 0;
}




void createTree() {
	ifstream inFile("practiceTree.txt"); // 각 컴퓨터에 저장된 텍스트 파일 입력
	if (!inFile) {
		cout << "파일을 열 수 없습니다." << endl;
		return;
	}

	int ver; // 노드 수
	int edge; // 간선
	inFile >> ver >> edge;

	
	for (int i = 0; i < edge; i++) {
		int p, c;
		inFile >> p >> c;
		if (CL[p] == 0) {
			CL[p] = c;
		}
		else {
			CR[p] = c;
		}
		PN[c] = p;
	}

	inFile.close();
}

void TR(int n, int* cnt) {
	if (n == 0) {
		return;
	}
	else {
		*cnt = *cnt + 1;
		cout << n << " ";
		TR(CL[n],cnt);
		TR(CR[n],cnt);
	}
}

void FND(int n) {
	while (PN[n] != 0) {
		n = PN[n];
		cout << n << " ";
	}
}


==============================================================================================================================================================
