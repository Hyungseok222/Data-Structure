// 2차원 배열 복습

#include<iostream>

using namespace std;

void inputArray(int(*p)[4], int row);
void outputArray(int(*p)[4], int row);

int main() {
	int num[3][4];
	int row; // 행의 개수
	row = sizeof(num) / sizeof(num[0]); //num[0]크기는 4*4 = 16byte
	inputArray(num, row);
	outputArray(num, row);
	return 0;
}

void inputArray(int(*p)[4], int row) {
	int i, j;
	for (i = 0; i < row; i++) {
		for (j = 0; j < 4; j++) {
			cout << i << "행 " << j << "열 방의 값 입력:";
			cin >> p[i][j];
		}
	}
	return;
}

void outputArray(int(*p)[4], int row) {
	int i, j;
	for (i = 0; i < row; i++) {
		cout << i << "행:";
		for (j = 0; j < 4; j++) {
			cout << p[i][j] << "  ";
		}
		cout << endl;
	}
	return;
}






// 3*4 (1~20난수)행렬 생성 후, 각 방의 요소들, 행들의 합, 열들의 합 출력 프로그램

#include<iostream>
#include<cstdlib>
#include<time.h>

using namespace std;

void makeArray(int(*pa)[4]);
void printArray(int(*pa)[4]);

int main() {
	srand(time(NULL));
	int num[3][4];
	makeArray(num);
	printArray(num);

	return 0;
}

void makeArray(int(*pa)[4]) {
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 4; j++) {
			pa[i][j] = rand() % 20 + 1;
		}
	}
	return;
}

void printArray(int(*pa)[4]) {
	int i, j;
	int rowsum;
	int colsum;

	for (i = 0; i < 3; i++) {
		cout << i << "행: ";
		for (j = 0; j < 4; j++) {
			cout << pa[i][j] << " ";
		}
		cout << endl;
	}

	cout << endl;

	for (i = 0; i < 3; i++) {
		rowsum = 0;
		for (j = 0; j < 4; j++) {
			rowsum += pa[i][j];
		}
		cout << i << "행의 합:" << rowsum << endl;
	}

	cout << endl;

	for (j = 0; j < 4; j++) {
		colsum = 0;
		for (i = 0; i < 3; i++) {
			colsum += pa[i][j];
		}
		cout << j << "열의 합:" << colsum << endl;
	}

	return;
}
